Lynn Cook's Learning Blog
for
Back-End Web Development

<<<<<<< HEAD
Wed 3 Jul 2013

Arrays

square brackets
collection of things

pigeon holes w objects in them

arrays reference their objects with numbers, they're indexed
whereas, hashes reference their objects with a key, eg first_name => "Ben"

****

FizzBuzz

case statements
	def fizzbuzz(num)
	case
	when num % 5 == 0 && num % 3 == 0
		"FizzBuzz"
	when num % 3 == 0
		"Fizz"
	when num % 5 == 0
		"Buzz"
	end


alternative ways 

	if x == y
		puts "hello"
	end

	puts "hello" if x == y

****
JSON

JavaScript Object Notation

rubygems.org

gem == ruby.package

HTTPI is a gem

API - application programming interface

***

before we write code work out what we want it to do

1. get json from reddit
2. parse json to hash
3. print stories to a terminal

***

variables - lower case
methods - lower case

class - start with capital letter eg HTTPI

jsonviewer.stack.hu

***

I'm completely lost with this, well not completely but quite lost. There's this thing called mapping which Ben has done so that his feeds from the 3 different sources work in the same way ... I've copied out his code for Digg ... I need to look at the parts

***

introduce methods, looping and arrays into the Secret Number Game
and generate a random number

Wed 26 Jun 2013

object == thing
in Ruby everything is an object
you can ask an object what class it belongs to by calling 

chair - class
class has attributes
all classes are types of objects

division operator is a method of FixedNum

in Ruby
- everything is an object
- everything returns a value

because everything is an object you can call a method on it, do method chaining

write in pseudo code, very straightforward ordinary language
think about edge cases, things that might go wrong


=======
>>>>>>> teacher/master
25 June 2013

making and running a .sh script

1. make a .sh file e.g. touch new.sh
2. open the file and write the code
e.g.
mkdir -p new
cd new
touch $1
echo $2 > $1
cd ..
more new/$1
NB: $1 is the first variable (or argument?), $2 the second, â€¦ $n the nth

3. to run a non-executable sh script use:
	$ sh myscript
4. to make a script executable
	$ chmod u+x myscript
5. to run an executable script
	$ ./myscript
	e.g.
	$ ./new.sh content "There's stuff in here."

Lesson 1
24 June 2013

homework

- add a public key to github - done
- revise slides - benaskins.github.io/BEWDiful_Students
- in local folder create a file called Lynn_blog.txt and write about first GA class - commit and push to github and send Ben a pull request - done
- find command line tools for SublimeText

before each class

in BEWDiful_Students directory
1. git fetch teacher
2. git merge teacher/master

notes - git

1. git init <- Once only per folder
2. git add - adds files to staging area
3. git commit - to add to repo
4. git push - to send them to git hub

git on home machine
push to git hub for online storage

5. git log - shows log of changes
6. git status - shows where you're up to

branch off to work separately and have two separate lot of commits, can merge back into master branch

fork - can take a whole repository and work on it in your own repository, can be merged back into master via pull request - this is a GitHub thing


notes - command line and setup

pwd	present working directory - where I am right now
mkdir	make directory
cd	change directory
ls	list directories and files in a particular directory
ls -a	lists all directories and files in a directory
ls -l	long list i.e. detailed list with read, write, execute details, size of files, date etc
touch	add a new file
open	open a file (Mac will find an appropriate app)
open .	open the current directory in Finder
more	shows contents of file
echo	repeats whatever is after itself on Terminal screen as a string
>	takes output from left and overwrites to file on right
>>	takes output from left and appends to file on right
cmd K	clears screen
ctrl C	abort, stops process

cmd space - spotlight - useful for finding files and applications quickly


notes - Ruby on Rails

37Signals building Basecamp, got David Heinemeier Hansson to build the web app bit, which he did using Ruby and developed Ruby on Rails as a web framework in the process. Interesting!



<<<<<<< HEAD
=======

>>>>>>> teacher/master
